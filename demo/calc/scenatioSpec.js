/**
 * Created on 03.11.2015.
 */

scenario('общее использование')
    .add(steps('сложение'))
    .add(steps('вычитание'))
    .add(steps('умножение'))
    .add(steps('деление'))
    .add(steps('деление на 0'))
    .add(steps('переполнение'))
    .add(steps('сброс'))
    .add(steps('отмена последнего ввода'))
    .add(steps('перекрытие предыдущей команды 10 + -'))
    .add(steps('запрос результата'))

    // кажеться излишним
    //.addGraph([
    //    ['x', [
    //        ['1 корретное действие',
    //            ['сложение', 'вычитание', 'умножение', 'деление']
    //        ],
    //        ['1 безобидное действие',
    //            ['сброс', 'отмена последнего ввода',
    //                'перекрытие предыдущей команды 10 + -']
    //        ],
    //        ['1-я ошибка',
    //            ['деление на 0', 'переполнение']]
    //    ]],
    //    ['1 корретное действие', [
    //        ['2 +',
    //            ['сложение', 'вычитание', 'умножение', 'деление']
    //        ],
    //        ['2 ~']
    //    ]]
    //]);


    .examples([
        [
            [
                ['ввести число', '*'],
                ['сложение', 'вычитание', 'умножение', 'деление'],
                ['ввести число', 'сброс', 'равно']
            ]
        ]
    ])


    .examples([
        {'1': 'ввести {x1}', '2': 'пропустить'},
        {1: '+ {x2}', 2: '- {x2}', 3: '* {x2}', 4: '/ {x2}'},
        {1: 'ввести {y1}', 2: 'сброс', 3: '='},
        {'e': 'проверить'}
    ])
    .withData([
        [[1, 1, 1, e], {}],
        [[1, 2, 3, e], {}],
        [[2, 4, 3, e], {}]
    ])


    .addName('allActions', {
        '+': '+ "{x}"', '-': '- "{x}"', '*': '* "{x}"', '/': '/ "{x}"',
        '/0': '/0', 6: '+ 2*max',
        7: 'сброс', 8: 'отмена', '=': '=',
        9: 'ввести "{y}"'
    })
    .addGraph([
        ['init',
            ['init', {'nameRef': 'allActions'}],
            ['end', {'q': 'поверка "{rez}"'}],
            ['init', {'t': 'проверка "{rez}"'}]
        ],
        ['end']
    ])
    .withData([
        [['+', '-', '=', 'q'], {'x0': 1, 'x1': 2, 'rez3': -1}]
            [
            ['+', '/0', '-', 't', 7, 9, "/", 'q'],
            {'x0': 1, 'x2': 5, 'rez3': 'error', 'y5': 8, "x6": 2, "rez7": 4}]
    ]);